package kr.nomad.mars.dao;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.sql.DataSource;


import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import kr.nomad.mars.dto.MissionUser;
public class MissionUserDao {
	
	private JdbcTemplate jdbcTemplate;
	public void setDataSource(DataSource dataSource) {
	    this.jdbcTemplate = new JdbcTemplate(dataSource);
	}

	private RowMapper missionuserMapper = new RowMapper() {
		public MissionUser mapRow(ResultSet rs, int rowNum) throws SQLException {
			MissionUser missionuser = new MissionUser();
			missionuser.setMissionSeq(rs.getInt("mission_seq"));
			missionuser.setUserId(rs.getString("user_id"));
			missionuser.setRegDate(rs.getString("reg_date"));
			return missionuser;
		}
	};

	public void addMissionUser(final MissionUser missionuser) {
		String query = "" +
				"INSERT INTO T_NF_MISSION_USER " +
				"	(mission_seq, user_id, reg_date) " +
				"VALUES " +
				"	(?, ?, getDate()) ";
		this.jdbcTemplate.update(query, new Object[] {
			missionuser.getMissionSeq(),
			missionuser.getUserId()
		});
	}

	public void deleteMissionUser(String mission_seq) {
		String query = "DELETE FROM T_NF_MISSION_USER WHERE mission_seq = ? ";
		this.jdbcTemplate.update(query, new Object[] { mission_seq });
	}
	
	public void deleteMissiondropUser(String userId) {
		String query = "DELETE FROM T_NF_MISSION_USER WHERE user_id = ? ";
		this.jdbcTemplate.update(query, new Object[] { userId });
	}

	public void updateMissionUser(MissionUser missionuser) { 
		String query = "" + 
				"UPDATE T_NF_MISSION_USER SET " +
				"	mission_seq = ?, " +
				"	user_id = ?, " +
				"	reg_date = ? " +
				"WHERE mission_seq = ? ";
		this.jdbcTemplate.update(query, new Object[] {
			missionuser.getMissionSeq(),
			missionuser.getUserId(),
			missionuser.getRegDate()
		});
	}

	public MissionUser getMissionUser(String mission_seq) {
		String query = "" + 
				"SELECT mission_seq, user_id, reg_date " +
				"FROM T_NF_MISSION_USER " +
				"WHERE mission_seq = ? ";
		return (MissionUser)this.jdbcTemplate.queryForObject(query, new Object[] { mission_seq }, this.missionuserMapper);
	}


	public int getMissionUserChk(int mission_seq,String userId) {
		String query = "" + 
				"SELECT count(*) " +
				"FROM T_NF_MISSION_USER " +
				"WHERE mission_seq = ? and user_id = ? ";
		return this.jdbcTemplate.queryForInt(query, new Object[] { mission_seq,userId });
	}
	
	public List<MissionUser> getMissionUserList(int missionSeq,int page, int itemCountPerPage) {
		String query = "" +
				"select * from ("
				+ " select "
				+ " ROW_NUMBER() OVER(order by reg_date desc) as row_seq,  "
				+ " A.* "
				+ "  from V_NF_MISSION_USER AS A where mission_seq = ? "
				+ "	) AS a WHERE row_seq BETWEEN (("+page+" - 1) * "+itemCountPerPage+") +1 AND "+page+" * "+itemCountPerPage+" ";
				
		return (List<MissionUser>)this.jdbcTemplate.query(query, new Object[] { missionSeq }, this.missionuserMapper);
	}
	
	public int getMissionUserCount(int missionSeq) {
		String query = "" +
				"select count(*) from "
				
				+ "   V_NF_MISSION_USER  where mission_seq = ? ";
		return this.jdbcTemplate.queryForInt(query, new Object[] { missionSeq });
	}
	

}
