package kr.nomad.mars.dao;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.sql.DataSource;


import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import kr.nomad.mars.dto.Mission;

public class MissionDao {
	
	private JdbcTemplate jdbcTemplate;
	public void setDataSource(DataSource dataSource) {
	    this.jdbcTemplate = new JdbcTemplate(dataSource);
	}

	private RowMapper missionMapper = new RowMapper() {
		public Mission mapRow(ResultSet rs, int rowNum) throws SQLException {
			Mission mission = new Mission();
			mission.setMissionSeq(rs.getInt("mission_seq"));
			mission.setUserId(rs.getString("user_id"));
			mission.setSendPush(rs.getInt("send_push"));
			mission.setTitle(rs.getString("title"));
			mission.setContentsHtml(rs.getString("contents_html"));
			mission.setContentsText(rs.getString("contents_text"));
			mission.setLinkUrl(rs.getString("link_url"));
			mission.setVisible(rs.getInt("visible"));
			mission.setFileName(rs.getString("file_name"));
			mission.setViewCount(rs.getInt("view_count"));
			mission.setRegDate(rs.getString("reg_date"));
			mission.setMissionStartDate(rs.getString("mission_start_date"));
			mission.setMissionEndDate(rs.getString("mission_end_date"));
			mission.setMissionPushTime(rs.getString("mission_push_time"));
			return mission;
		}
	};

	public void addMission(final Mission mission) {
		String query = "" +
				"INSERT INTO T_NF_MISSION " +
				"	(mission_seq, user_id, send_push, title, contents_html, contents_text, link_url, visible, file_name, view_count, reg_date, mission_start_date, mission_end_date, mission_push_time) " +
				"VALUES " +
				"	(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ";
		this.jdbcTemplate.update(query, new Object[] {
			mission.getMissionSeq(),
			mission.getUserId(),
			mission.getSendPush(),
			mission.getTitle(),
			mission.getContentsHtml(),
			mission.getContentsText(),
			mission.getLinkUrl(),
			mission.getVisible(),
			mission.getFileName(),
			mission.getViewCount(),
			mission.getRegDate(),
			mission.getMissionStartDate(),
			mission.getMissionEndDate(),
			mission.getMissionPushTime()
		});
	}

	public void deleteMission(String mission_seq) {
		String query = "DELETE FROM T_NF_MISSION WHERE mission_seq = ? ";
		this.jdbcTemplate.update(query, new Object[] { mission_seq });
	}

	public void updateMission(Mission mission) { 
		String query = "" + 
				"UPDATE T_NF_MISSION SET " +
				"	mission_seq = ?, " +
				"	user_id = ?, " +
				"	send_push = ?, " +
				"	title = ?, " +
				"	contents_html = ?, " +
				"	contents_text = ?, " +
				"	link_url = ?, " +
				"	visible = ?, " +
				"	file_name = ?, " +
				"	view_count = ?, " +
				"	reg_date = ?, " +
				"	mission_start_date = ?, " +
				"	mission_end_date = ?, " +
				"	mission_push_time = ? " +
				"WHERE mission_seq = ? ";
		this.jdbcTemplate.update(query, new Object[] {
			mission.getMissionSeq(),
			mission.getUserId(),
			mission.getSendPush(),
			mission.getTitle(),
			mission.getContentsHtml(),
			mission.getContentsText(),
			mission.getLinkUrl(),
			mission.getVisible(),
			mission.getFileName(),
			mission.getViewCount(),
			mission.getRegDate(),
			mission.getMissionStartDate(),
			mission.getMissionEndDate(),
			mission.getMissionPushTime()
		});
	}

	public Mission getMission(String mission_seq) {
		String query = "" + 
				"SELECT mission_seq, user_id, send_push, title, contents_html, contents_text, link_url, visible, file_name, view_count, reg_date, mission_start_date, mission_end_date, mission_push_time " +
				"FROM T_NF_MISSION " +
				"WHERE mission_seq = ? ";
		return (Mission)this.jdbcTemplate.queryForObject(query, new Object[] { mission_seq }, this.missionMapper);
	}

	public List<Mission> getMissionList(String type,String userId,int page, int itemCountPerPage) {
		String con="where 1=1 ";
		if(!type.equals("")){
			con +=" and user_id = '"+userId;
		}
		
		String query = "" 
				+ "	SELECT * FROM ( "
				+ "		SELECT "
				+ "			ROW_NUMBER() OVER(order by reg_date desc) as row_seq, "
				+ "			A.* "
				+ "		FROM T_NF_MISSION AS A "+con
				+ "	) AS a WHERE row_seq BETWEEN (("+page+" - 1) * "+itemCountPerPage+") +1 AND "+page+" * "+itemCountPerPage+" ";
				
		return (List<Mission>)this.jdbcTemplate.query(query, this.missionMapper);
	}
	
	public int getMissionCount(String type,String userId) {
		String con="where 1=1 ";
		if(!type.equals("")){
			con +=" and user_id = '"+userId;
		}
		String query = "" 
				+ "	SELECT count(*) FROM  "
				+ "		 T_NF_MISSION "+con;
		return this.jdbcTemplate.queryForInt(query);
	}

}
