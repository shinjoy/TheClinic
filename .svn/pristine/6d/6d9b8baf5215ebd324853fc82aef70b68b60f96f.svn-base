package kr.nomad.mars.dao;


import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.sql.DataSource;


import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import kr.nomad.mars.dto.User;

public class UserDao {
	
	
	private JdbcTemplate jdbcTemplate;
	public void setDataSource(DataSource dataSource) {
	    this.jdbcTemplate = new JdbcTemplate(dataSource);
	}

	private RowMapper userMapper = new RowMapper() {
		public User mapRow(ResultSet rs, int rowNum) throws SQLException {
			User user = new User();
			user.setUserId(rs.getString("user_id"));
			user.setPassword(rs.getString("password"));
			user.setUserType(rs.getString("user_type"));
			user.setUserName(rs.getString("user_name"));
			user.setPhoneNumber(rs.getString("phone_number"));
			user.setLatitude(rs.getInt("latitude"));
			user.setLongitude(rs.getInt("longitude"));
			user.setBirthday(rs.getString("birthday"));
			user.setGender(rs.getInt("gender"));
			user.setRegDate(rs.getString("reg_date"));
			user.setLastLogindate(rs.getString("last_logindate"));
			user.setLoginFacebook(rs.getString("login_facebook"));
			user.setLoginGoogle(rs.getString("login_google"));
			user.setOsType(rs.getString("os_type"));
			user.setOsVersion(rs.getString("os_version"));
			user.setAppVersion(rs.getString("app_version"));
			user.setDeviceName(rs.getString("device_name"));
			user.setDeviceId(rs.getString("device_id"));
			user.setPushkey(rs.getString("pushkey"));
			user.setUsePushservice(rs.getInt("use_pushservice"));
			user.setStatus(rs.getString("status"));
			user.setLoginStatus(rs.getInt("login_status"));
			user.setUserMed(rs.getInt("user_med"));
			return user;
		}
	};

	public void addUser(final User user) {
		String query = "" +
				"INSERT INTO T_NF_USER " +
				"	(user_id, password, user_type, user_name, phone_number, latitude, longitude, birthday, gender, reg_date, last_logindate, login_facebook, login_google, os_type, os_version, app_version, device_name, device_id, pushkey, use_pushservice, status, login_status, user_med) " +
				"VALUES " +
				"	(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ";
		this.jdbcTemplate.update(query, new Object[] {
			user.getUserId(),
			user.getPassword(),
			user.getUserType(),
			user.getUserName(),
			user.getPhoneNumber(),
			user.getLatitude(),
			user.getLongitude(),
			user.getBirthday(),
			user.getGender(),
			user.getRegDate(),
			user.getLastLogindate(),
			user.getLoginFacebook(),
			user.getLoginGoogle(),
			user.getOsType(),
			user.getOsVersion(),
			user.getAppVersion(),
			user.getDeviceName(),
			user.getDeviceId(),
			user.getPushkey(),
			user.getUsePushservice(),
			user.getStatus(),
			user.getLoginStatus(),
			user.getUserMed()
		});
	}

	public void deleteUser(String user_id) {
		String query = "DELETE FROM T_NF_USER WHERE user_id = ? ";
		this.jdbcTemplate.update(query, new Object[] { user_id });
	}

	public void updateUser(User user) { 
		String query = "" + 
				"UPDATE T_NF_USER SET " +
				"	user_id = ?, " +
				"	password = ?, " +
				"	user_type = ?, " +
				"	user_name = ?, " +
				"	phone_number = ?, " +
				"	latitude = ?, " +
				"	longitude = ?, " +
				"	birthday = ?, " +
				"	gender = ?, " +
				"	reg_date = ?, " +
				"	last_logindate = ?, " +
				"	login_facebook = ?, " +
				"	login_google = ?, " +
				"	os_type = ?, " +
				"	os_version = ?, " +
				"	app_version = ?, " +
				"	device_name = ?, " +
				"	device_id = ?, " +
				"	pushkey = ?, " +
				"	use_pushservice = ?, " +
				"	status = ?, " +
				"	login_status = ?, " +
				"	user_med = ? " +
				"WHERE user_id = ? ";
		this.jdbcTemplate.update(query, new Object[] {
			user.getUserId(),
			user.getPassword(),
			user.getUserType(),
			user.getUserName(),
			user.getPhoneNumber(),
			user.getLatitude(),
			user.getLongitude(),
			user.getBirthday(),
			user.getGender(),
			user.getRegDate(),
			user.getLastLogindate(),
			user.getLoginFacebook(),
			user.getLoginGoogle(),
			user.getOsType(),
			user.getOsVersion(),
			user.getAppVersion(),
			user.getDeviceName(),
			user.getDeviceId(),
			user.getPushkey(),
			user.getUsePushservice(),
			user.getStatus(),
			user.getLoginStatus(),
			user.getUserMed()
		});
	}

	public User getUser(String user_id) {
		String query = "" + 
				"SELECT user_id, password, user_type, user_name, phone_number, latitude, longitude, birthday, gender, reg_date, last_logindate, login_facebook, login_google, os_type, os_version, app_version, device_name, device_id, pushkey, use_pushservice, status, login_status, user_med " +
				"FROM T_NF_USER " +
				"WHERE user_id = ? ";
		return (User)this.jdbcTemplate.queryForObject(query, new Object[] { user_id }, this.userMapper);
	}

	public List<User> getUserList(int page, int itemCountPerPage) {
		String query = "" +
				"SELECT TOP "+ itemCountPerPage +" user_id, password, user_type, user_name, phone_number, latitude, longitude, birthday, gender, reg_date, last_logindate, login_facebook, login_google, os_type, os_version, app_version, device_name, device_id, pushkey, use_pushservice, status, login_status, user_med " +
				"FROM T_NF_USER " +
				"WHERE user_id <= ( " +
				"	SELECT MIN(user_id) " +
				"	FROM ( " +
				"		SELECT TOP "+ ((page-1) * itemCountPerPage + 1) +" user_id " +
				"		FROM T_NF_USER " +
				"		ORDER BY user_id DESC " +
				"	) AS A) " +
				"ORDER BY user_id DESC";
		return (List<User>)this.jdbcTemplate.query(query, this.userMapper);
	}

}
